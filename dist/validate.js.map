{"version":3,"sources":["../lib/validate.js"],"names":["JoiObjectId","validateModel","incomingObject","schema","callback","validate","validateElement","element","type"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,yCAApB;;AAGA,SAASC,aAAT,CAAuBC,cAAvB,EAAuCC,MAAvC,EAA+CC,QAA/C,EAAyD;AACvD,gBAAIC,QAAJ,CAAaH,cAAb,EAA6BC,MAA7B,EAAqCC,QAArC;AAED;;AAED,SAASE,eAAT,CAAyBC,OAAzB,EAAkCC,IAAlC,EAAwCJ,QAAxC,EAAkD;AAChD,MAAGI,SAAS,UAAZ,EAAwB,OAAO,cAAIH,QAAJ,CAAaE,OAAb,EAAsBP,aAAtB,EAAqCI,QAArC,CAAP;;AAExB,MAAG,OAAO,cAAII,IAAJ,CAAP,KAAqB,UAAxB,EAAoC,cAAIH,QAAJ,CAAaE,OAAb,EAAsB,cAAIC,IAAJ,GAAtB,EAAmCJ,QAAnC;AAErC;;QAEQH,a,GAAAA,a;QAAeK,e,GAAAA,e;kBAET,EAAEL,4BAAF,EAAiBK,gCAAjB,E","file":"validate.js","sourcesContent":["import Joi from 'joi'\nimport JoiObjectIdModule from 'joi-objectid'\n\nconst JoiObjectId = JoiObjectIdModule(Joi)\n\n\nfunction validateModel(incomingObject, schema, callback) {\n  Joi.validate(incomingObject, schema, callback)\n\n}\n\nfunction validateElement(element, type, callback) {\n  if(type === 'ObjectId') return Joi.validate(element, JoiObjectId(), callback)\n\n  if(typeof Joi[type] === 'function') Joi.validate(element, Joi[type](), callback)\n\n}\n\nexport { validateModel, validateElement }\n\nexport default { validateModel, validateElement}"]}