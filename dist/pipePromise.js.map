{"version":3,"sources":["../lib/pipePromise.js"],"names":["$pipe","$pipePromise","fnc","state","critical","promise","Promise","resolve","reject","fncCalled","cloneDeep","then","_successHandler","fncState","catch","_errorHandler","error","nState","merge","process","env","NODE_ENV","DEBUG","console","warn","pipeFnc","params","length","dir","param","get"],"mappings":"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","file":"pipePromise.js","sourcesContent":["/**\n *  $pipePromise.\n * @module\n */\nimport _ from 'lodash'\n\nexport class $pipePromise {\n  /**\n   * Basic Promise object that is transported across de pipeline\n   * @param {Function} fnc - Function to execute in the pipeline\n   * @param {Object} state - Current state of the App\n   * @param {boolean} [critical] - When $critical is present, an exception stop de pipe execution\n   */\n  constructor (fnc, state, critical) {\n    this.state = state\n    this.promise = new Promise((resolve, reject) => {\n      try {\n        const fncCalled = fnc(_.cloneDeep(this.state))\n\n        if (!(typeof fncCalled.then === 'function')) {\n          return this._successHandler(fncCalled, resolve)\n        }\n\n        return fncCalled.then(fncState => {\n          return this._successHandler(fncState, resolve)\n        })\n          .catch(error => {\n            return this._errorHandler(error, critical, reject, resolve)\n          })\n      } catch (error) {\n        return this._errorHandler(error, critical, reject, resolve)\n      }\n    })\n  }\n\n  _successHandler (nState, resolve) {\n    this.state = _.merge(this.state, nState)\n    return resolve(_.cloneDeep(this.state))\n  }\n\n  _errorHandler (error, critical, reject, resolve) {\n    if (critical || this.critical) {\n      this.critical = true\n      return reject(error)\n    }\n\n    if (process.env.NODE_ENV === 'production' || process.env.DEBUG) console.warn(error)\n\n    this.state.error = error\n    return resolve(_.cloneDeep(this.state))\n  }\n\n  then (fnc, critical) {\n    this.promise = this.promise.then(fnc)\n      .then(nState => {\n        this.state = _.merge(this.state, nState)\n\n        return _.cloneDeep(this.state)\n      })\n      .catch(error => {\n        if (critical || this.critical) {\n          this.critical = true\n          throw error\n        }\n\n        if (process.env.NODE_ENV === 'production' || process.env.DEBUG) console.warn(error)\n        this.state.error = error\n        return _.cloneDeep(this.state)\n      })\n\n    return this\n  }\n\n  use (pipeFnc, critical) {\n    return this.then((state) => {\n      return pipeFnc($pipe, true, state)\n    }, critical)\n  }\n\n  debug (...params) {\n    return this.then((state) => {\n      if (params.length === 0) {\n        console.dir(state)\n        return {}\n      }\n\n      for (let param of params) {\n        console.dir(_.get(state, param))\n      }\n      return {}\n    })\n  }\n}\n\n/**\n *\n * @param {Function} fnc Function to execute in the pipeline.\n * @param {Object} state Current state of the App.\n * @param {boolean} [critical] When $critical is present, an exception stop de pipe execution.\n * @returns {$pipePromise}\n */\nexport function $pipe (fnc, state, critical) {\n  return new $pipePromise(fnc, state, critical)\n}\n"]}