{"version":3,"sources":["../lib/pipePromise.js"],"names":["$pipe","$pipePromise","fnc","state","critical","cloneDeep","promise","Promise","resolve","reject","setTimeout","fncReturn","then","catch","_successHandler","fncState","_errorHandler","error","nState","merge","process","env","NODE_ENV","DEBUG","console","warn","pipeFnc","params","length","dir","param","get","err","push","hasOwnProperty"],"mappings":"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","file":"pipePromise.js","sourcesContent":["/**\n *  $pipePromise.\n * @module\n */\nimport _ from 'lodash'\n\nexport class $pipePromise {\n  /**\n   * Basic Promise object that is transported across de pipeline\n   * @param {Function} fnc - Function to execute in the pipeline\n   * @param {Object} state - Current state of the App\n   * @param {boolean} [critical] - When $critical is present, an exception stop de pipe execution\n   */\n  constructor (fnc, state, critical) {\n    this.state = _.cloneDeep(state)\n    this.promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        try {\n          const fncReturn = fnc(_.cloneDeep(this.state))\n\n          if (!fncReturn || typeof fncReturn.then !== 'function' || typeof fncReturn.catch !== 'function') {\n            return this._successHandler(fncReturn, resolve)\n          }\n\n          return fncReturn.then(fncState => {\n            return this._successHandler(fncState, resolve)\n          })\n            .catch(error => {\n              return this._errorHandler(error, critical, reject, resolve)\n            })\n        } catch (error) {\n          return this._errorHandler(error, critical, reject, resolve)\n        }\n      })\n    })\n  }\n\n  _successHandler (nState, resolve) {\n    this.state = _.merge(this.state, nState)\n    return resolve(this.state)\n  }\n\n  _errorHandler (error, critical, reject, resolve) {\n    if (critical || this.critical) {\n      this.critical = true\n      return reject(error)\n    }\n\n    if (process.env.NODE_ENV === 'production' || process.env.DEBUG) console.warn(error)\n\n    this.state.error = error\n    return resolve(this.state)\n  }\n\n  then (fnc, critical) {\n    this.promise = this.promise.then((state) => {\n      return (new $pipePromise(fnc, state, critical)).promise\n    })\n      .then(nState => {\n        this.state = _.merge(this.state, nState)\n\n        return this.state\n      })\n      .catch(error => {\n        if (critical || this.critical) {\n          this.critical = true\n          throw error\n        }\n\n        if (process.env.NODE_ENV === 'production' || process.env.DEBUG) console.warn(error)\n        this.state.error = error\n        return this.state\n      })\n\n    return this\n  }\n\n  use (pipeFnc, critical) {\n    return this.then((state) => {\n      return pipeFnc($pipe, true, state).promise\n    }, critical)\n  }\n\n  debug (...params) {\n    return this.then((state) => {\n      if (params.length === 0) {\n        console.dir(state)\n        return {}\n      }\n\n      for (let param of params) {\n        console.dir(_.get(state, param))\n      }\n      return {}\n    })\n  }\n\n  finally (fnc) {\n    let err\n\n    this.promise = this.promise.catch((error) => {\n      err = error\n      return error\n    }).then(() => {\n      return (new $pipePromise(fnc, this.state, true)).promise\n        .then(() => {\n          if (err) throw err\n\n          return this.state\n        })\n    })\n\n    return this\n  }\n\n  return (...params) {\n    this.promise = this.promise.then(() => {\n      params.push('error')\n      let state = {}\n\n      for (let param of params) {\n        if (!this.state.hasOwnProperty(param)) continue\n\n        state[param] = _.get(this.state, param)\n      }\n      this.state = state\n      return state\n    })\n\n    return this\n  }\n}\n\n/**\n *\n * @param {Function} fnc Function to execute in the pipeline.\n * @param {Object} state Current state of the App.\n * @param {boolean} [critical] When $critical is present, an exception stop de pipe execution.\n * @returns {$pipePromise}\n */\nexport function $pipe (fnc, state, critical) {\n  return new $pipePromise(fnc, state, critical)\n}\n"]}